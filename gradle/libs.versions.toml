[versions]
awaitility = "4.2.1"
detekt = "1.23.6"
kafka = "1.3.23"
kotlin = "1.9.23"
kotlin-serialization-cbor = "1.6.3"
kotlinx-coroutines = "1.8.1"
kover = "0.8.0"
ktor = "2.3.11"

logstash-logback-encoder = "7.4"
otel-logback-encoder = "2.4.0-alpha"

micrometer = "1.13.1"
micrometer-context-propagation = "1.1.1"
micrometer-reactor = "1.1.6"
micrometer-tracing = "1.3.0"

mockito = "5.3.1"
otel = "1.37.0"
r2dbc-postgresql = "1.0.5.RELEASE"
flyway="10.15.0"
junit="5.10.2"
junit-launcher="1.10.2"
postgresql="42.7.3"
reactor-kotlin-extensions = "1.2.2"
rsocket-micrometer = "1.1.4"
shedlock = "5.13.0"
sonarqube = "5.0.0.4638"

swagger-annotations="2.2.22"

testcontainers = "1.19.8"
reactor-test = "3.6.7"
testcontainers-redis = "2.2.2"


[libraries]
awaitility = { group = "org.awaitility", name = "awaitility-kotlin", version.ref = "awaitility" }
reactor-test = { group = "io.projectreactor", name = "reactor-test", version.ref="reactor-test" }

detekt-ktlint = { group = "io.gitlab.arturbosch.detekt", name = "detekt-formatting", version.ref = "detekt" }

flyway-core = { group = "org.flywaydb", name = "flyway-core", version.ref="flyway" }
flyway-postgres = { group = "org.flywaydb", name = "flyway-database-postgresql", version.ref="flyway" }

junit-api = { group = "org.junit.jupiter", name = "junit-jupiter-api", version.ref="junit" }
junit-engine = { group = "org.junit.jupiter", name = "junit-jupiter-engine", version.ref="junit" }
junit-launcher = { group = "org.junit.platform", name = "junit-platform-launcher", version.ref="junit-launcher" }

logback-logstash = { group = "net.logstash.logback", name = "logstash-logback-encoder", version.ref = "logstash-logback-encoder" }
logback-otel = { group = "io.opentelemetry.instrumentation", name = "opentelemetry-logback-appender-1.0", version.ref = "otel-logback-encoder" }

micrometer = { group = "io.micrometer", name = "micrometer-core", version.ref = "micrometer" }
micrometer-reactor = { group = "io.projectreactor", name = "reactor-core-micrometer", version.ref = "micrometer-reactor" }
micrometer-context-propagation = { group = "io.micrometer", name = "context-propagation", version.ref = "micrometer-context-propagation" }
micrometer-registry-otlp = { group = "io.micrometer", name = "micrometer-registry-otlp", version.ref = "micrometer" }
micrometer-tracing = { group = "io.micrometer", name = "micrometer-tracing", version.ref = "micrometer-tracing" }
micrometer-tracing-otel = { group = "io.micrometer", name = "micrometer-tracing-bridge-otel", version.ref = "micrometer-tracing" }

ktor-server-core = { group = "io.ktor", name = "ktor-server-core", version.ref = "ktor" }
ktor-server-netty = { group = "io.ktor", name = "ktor-server-netty", version.ref = "ktor" }
ktor-server-openapi = { group = "io.ktor", name = "ktor-server-openapi", version.ref = "ktor" }
ktor-server-swagger = { group = "io.ktor", name = "ktor-server-swagger", version.ref = "ktor" }
ktor-server-tests = { group = "io.ktor", name = "ktor-server-tests", version.ref = "ktor" }

kotlin-coroutines-core = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-core", version.ref = "kotlinx-coroutines" }
kotlin-coroutines-reactive = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-reactive", version.ref = "kotlinx-coroutines" }
kotlin-coroutines-reactor = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-reactor", version.ref = "kotlinx-coroutines" }
kotlin-extensions = { group = "io.projectreactor.kotlin", name = "reactor-kotlin-extensions", version.ref = "reactor-kotlin-extensions" }
kotlin-serialization-cbor = { group = "org.jetbrains.kotlinx", name = "kotlinx-serialization-cbor", version.ref = "kotlin-serialization-cbor" }

otel-otlp = { module = "io.opentelemetry:opentelemetry-exporter-otlp", version.ref = "otel" }

mockito = { group = "org.mockito.kotlin", name = "mockito-kotlin", version.ref = "mockito" }

postgresql = { group = "org.postgresql", name = "postgresql", version.ref="postgresql" }

r2dbc-postgresql = { group = "org.postgresql", name = "r2dbc-postgresql", version.ref = "r2dbc-postgresql" }
shedlock-provider-r2dbc = { group = "net.javacrumbs.shedlock", name = "shedlock-provider-r2dbc", version.ref = "shedlock" }
shedlock-spring = { group = "net.javacrumbs.shedlock", name = "shedlock-spring", version.ref = "shedlock" }

swagger-annotations = { group = "io.swagger.core.v3", name = "swagger-annotations", version.ref = "swagger-annotations" }

testcontainers-junit = { group = "org.testcontainers", name = "junit-jupiter", version.ref = "testcontainers" }
testcontainers-kafka = { group = "org.testcontainers", name = "kafka", version.ref = "testcontainers" }
testcontainers-postgres = { group = "org.testcontainers", name = "postgresql", version.ref = "testcontainers" }
testcontainers-redis = { group = "com.redis", name = "testcontainers-redis", version.ref = "testcontainers-redis" }

kafka = { module = "io.projectreactor.kafka:reactor-kafka", version.ref = "kafka" }

rsocket-micrometer = { module = "io.rsocket:rsocket-micrometer", version.ref = "rsocket-micrometer" }

[bundles]
kotlin = ["kotlin-coroutines-core", "kotlin-coroutines-reactive", "kotlin-coroutines-reactor", "kotlin-extensions", "kotlin-serialization-cbor"]

kafka = ["kafka",  "testcontainers-kafka"]
database = [ "flyway-core"]
test = ["junit-api", "junit-engine", "testcontainers-junit", "mockito", "awaitility", "reactor-test"]

postgres = ["flyway-postgres", "postgresql", "testcontainers-postgres", "r2dbc-postgresql"]
redis = ["testcontainers-redis"]
web = [
    "ktor-server-core",
    "ktor-server-netty",
    "ktor-server-tests",
    "ktor-server-openapi",
    "ktor-server-swagger"
]
micrometer = ["micrometer", "micrometer-registry-otlp", "micrometer-reactor", "micrometer-tracing", "micrometer-tracing-otel", "micrometer-context-propagation"]
shedlock = ["shedlock-spring", "shedlock-provider-r2dbc"]

[plugins]
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }
kotlin = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }

kotlin-spring = { id = "org.jetbrains.kotlin.plugin.spring", version.ref = "kotlin" }
kover = { id = "org.jetbrains.kotlinx.kover", version.ref = "kover" }
sonarqube = { id = "org.sonarqube", version.ref = "sonarqube" }
ktor = { id = "io.ktor.plugin", version.ref = "ktor" }
